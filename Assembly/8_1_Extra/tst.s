.section .text
.align 2
.global _start

@@ TODO: to be checked
_start:
    ldr r0, =_data
    mov r2, #1
    b   _loop

_loop:
    ldr r1, [r0]
    cmp r1, #0x0A
    beq _end

    cmp r1, #0x60
    bgt _gt60
    ble _skip

_gt60: 
    cmp   r1, #0x7B
    blt   _lt7B
    bgt   _skip
    bne   _skip

_lt7B:
    cmp   r2, #1
    subeq r1, #0x20
    streq r1, [r0]
    bne   _skip

_skip:
    cmp   r1, #0x20
    moveq r2, #1
    movne r2, #0
    add   r0, r0, #4
    b     _loop

_end:
    b _end


.section .data
_data:
@Hi I know how to code with ARM assembly
.word 0x48, 0x69, 0x20, 0x49, 0x20, 0x6B, 0x6E, 0x6F, 0x77, 0x20, 0x68, 0x6F, 0x77, 0x20, 0x74, 0x6F, 0x20, 0x63, 0x6F, 0x64, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x41, 0x52, 0x4D, 0x20, 0x61, 0x73, 0x73, 0x65, 0x6D, 0x62, 0x6C, 0x79, 0x0A

